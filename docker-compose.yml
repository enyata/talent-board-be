services:
  postgres:
    image: postgres:17
    container_name: postgres-dev
    profiles: ["dev"]
    env_file: .env
    environment:
      POSTGRES_USER: ${TALENTS_DB_USER}
      POSTGRES_PASSWORD: ${TALENTS_DB_PASSWORD}
      POSTGRES_DB: ${TALENTS_DB_NAME}
    ports:
      - "5452:5432"
    volumes:
      - ./data/db:/var/lib/postgresql/data
    restart: always

  postgres_test:
    image: postgres:17
    container_name: postgres-test
    profiles: ["test"]
    environment:
      POSTGRES_USER: test_user
      POSTGRES_PASSWORD: test_password
      POSTGRES_DB: test_db
    ports:
      - "5453:5432"
    volumes:
      - ./data/test-db:/var/lib/postgresql/data
    restart: always
  redis:
    image: redis:7-alpine
    container_name: redis
    profiles: ["dev", "test"]
    ports:
      - "6389:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis_data:/data
    restart: always

  adminer:
    image: adminer:4.8.1
    container_name: adminer
    ports:
      - "8090:8080"
    depends_on:
      - postgres
    restart: always
    profiles: ["dev"]

  adminer_prod:
    image: adminer:4.8.1
    container_name: adminer-prod
    ports:
      - "8084:8080"
    depends_on:
      - postgres
    restart: always
    profiles: ["dev"]
  backend:
    container_name: talentboard-backend
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=development
    ports:
      - "8000:8000"
    env_file: .env
    environment:
      NODE_ENV: development
      DB_HOST: postgres
      REDIS_HOST: redis
    volumes:
      - .:/app
    command: yarn dev
    depends_on:
      - postgres
      - redis
    profiles: ["dev"]

  backend_test:
    container_name: talentboard-backend-test
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - NODE_ENV=test
    environment:
      NODE_ENV: test
      IS_DOCKER: true
      DB_HOST: postgres_test
      REDIS_HOST: redis
    volumes:
      - .:/app
    command: yarn test
    depends_on:
      - postgres_test
      - redis
    profiles: ["test"]

volumes:
  redis_data:
